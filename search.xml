<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/10/11/2023-10-11%E7%89%A9%E7%90%86/"/>
      <url>/2023/10/11/2023-10-11%E7%89%A9%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>![[物理202310111330.jpg]]</p><h2 id="杨氏双缝干涉"><a href="#杨氏双缝干涉" class="headerlink" title="#杨氏双缝干涉"></a>#杨氏双缝干涉</h2><p>$\Delta r \approx dtan\theta&#x3D;d\frac x{d’},\theta$是一个非常小的角<br>$&#x3D;\left{\begin{matrix}\pm k\lambda&amp;明纹\\pm(2k+1)\frac{\lambda}2&amp;暗纹\end{matrix}\right.$<br>$\left{\begin{matrix}x_明&#x3D;\pm k\lambda\frac{d’}d\x_暗&#x3D;\pm(2k+1)\frac{\lambda}2\frac{d’}d\end{matrix}\right.(k&#x3D;0,1,…)$</p><h3 id="劳埃德镜"><a href="#劳埃德镜" class="headerlink" title="劳埃德镜"></a>劳埃德镜</h3><h2 id="光程"><a href="#光程" class="headerlink" title="光程"></a>光程</h2><p>光程：折射率$\times$波程$nr$<br>光程差：$\Delta&#x3D;n_1r_1-n_2r_2$</p>]]></content>
      
      
      <categories>
          
          <category> 物理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/10/10/2023-10-10%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/"/>
      <url>/2023/10/10/2023-10-10%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>#高阶导数公式<br>$\oint_C{\frac{f(z)}{(z-z_0)^{n+1}}\mathrm dz} &#x3D; \frac{2\pi i}{n!}f^{(n)}(z_0)$</p>]]></content>
      
      
      <categories>
          
          <category> 概率论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 概率论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/10/10/2023-10-10%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
      <url>/2023/10/10/2023-10-10%E6%A6%82%E7%8E%87%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="多维随机变量及其分布"><a href="#多维随机变量及其分布" class="headerlink" title="多维随机变量及其分布"></a>多维随机变量及其分布</h2><p><em>只是增加到二维</em></p><ul><li>二维随机变量及其分布</li><li>边缘分布</li></ul><h3 id="二维随机变量的联合分布函数"><a href="#二维随机变量的联合分布函数" class="headerlink" title="二维随机变量的联合分布函数"></a>二维随机变量的联合分布函数</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>设(X,Y)是二维随机变量，对于任意实数x,y，二元函数</p>]]></content>
      
      
      <categories>
          
          <category> 概率论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 概率论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/10/09/2023-10-09%E6%A8%A1%E7%94%B5/"/>
      <url>/2023/10/09/2023-10-09%E6%A8%A1%E7%94%B5/</url>
      
        <content type="html"><![CDATA[<ul><li>静态工作点</li><li>直接耦合：信号源与放大电路，放大电路与负载电阻均直接相连</li></ul>]]></content>
      
      
      <categories>
          
          <category> 模电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模电 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/10/08/2023-10-08%E7%89%A9%E7%90%86/"/>
      <url>/2023/10/08/2023-10-08%E7%89%A9%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h2><h3 id="波函数"><a href="#波函数" class="headerlink" title="#波函数"></a>#波函数</h3><p>$y(x,t)&#x3D;Acos(\omega t+\phi-\frac{2\pi}{\lambda}x)$</p><h3 id="波的-干涉"><a href="#波的-干涉" class="headerlink" title="波的 #干涉"></a>波的 #干涉</h3><p>$$\left{\begin{matrix}y(r_1,t)&#x3D;Acos(\omega t +\phi_1-\frac{2\pi}{\lambda}r_1)\y(r_2,t)&#x3D;Acos(\omega t +\phi_2-\frac{2\pi}{\lambda}r_2)\end{matrix}\right.$$$$\Delta\phi&#x3D;(\phi_2-\phi_1)-\frac{2\pi}{\lambda}(r_2-r_1)$$</p><p>$$\Delta\phi&#x3D;\left{\begin{matrix}2k\pi&amp;极大,A&#x3D;A_1+A_2\2(k+1)\pi&amp;极小，A&#x3D;|A_2-A_1|\end{matrix}\right.k&#x3D;0,1,…$$<br>$\phi_1&#x3D;\phi_2$时<br>$\Delta\phi&#x3D;-\frac{2\pi}{\lambda}(r_2-r_1)$<br>$\Delta r&#x3D;\left{\begin{matrix}k\lambda&amp;极大\(2k+1)\frac\lambda2&amp;极小\end{matrix}\right.k&#x3D;0,1,…$</p><h1 id="光学"><a href="#光学" class="headerlink" title="#光学"></a>#光学</h1><h2 id="相干光源的获得"><a href="#相干光源的获得" class="headerlink" title="相干光源的获得"></a>相干光源的获得</h2><ul><li>分波阵面</li><li>分振</li></ul><h2 id="杨氏双缝干涉实验"><a href="#杨氏双缝干涉实验" class="headerlink" title="杨氏双缝干涉实验"></a>杨氏双缝干涉实验</h2>]]></content>
      
      
      <categories>
          
          <category> 物理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/10/07/templates/%E6%A8%A1%E7%94%B5/"/>
      <url>/2023/10/07/templates/%E6%A8%A1%E7%94%B5/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 模电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模电 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/10/07/templates/%E7%89%A9%E7%90%86/"/>
      <url>/2023/10/07/templates/%E7%89%A9%E7%90%86/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 物理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/10/07/templates/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/"/>
      <url>/2023/10/07/templates/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 复变函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复变函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/10/07/templates/%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
      <url>/2023/10/07/templates/%E6%A6%82%E7%8E%87%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 概率论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 概率论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/10/07/2023-10-07%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
      <url>/2023/10/07/2023-10-07%E6%A6%82%E7%8E%87%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h2><p>![[2023-09-14概率论#^b88979|全概率公式]]</p><p>![[2023-09-23概率论#泊松分布|泊松分布]]</p><p>![[2023-09-28概率论#均匀分布$U(a,b)$]]</p><p>![[2023-09-28概率论#指数分布 $E( lambda)$|指数分布]]</p><p>![[2023-09-28概率论#正态分布 $N( mu, sigma 2)$]]</p><h2 id="概率函数的分布-与-概率分布函数"><a href="#概率函数的分布-与-概率分布函数" class="headerlink" title="#概率函数的分布 与 #概率分布函数"></a>#概率函数的分布 与 #概率分布函数</h2><p>![[概率论202310071355.jpeg]]</p>]]></content>
      
      
      <categories>
          
          <category> 概率论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 概率论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/10/07/2023-10-07%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/"/>
      <url>/2023/10/07/2023-10-07%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="柯西积分定理"><a href="#柯西积分定理" class="headerlink" title="#柯西积分定理"></a>#柯西积分定理</h2><h3 id="单连通区域-柯西积分定理"><a href="#单连通区域-柯西积分定理" class="headerlink" title="#单连通区域 #柯西积分定理"></a>#单连通区域 #柯西积分定理</h3><p>设$f(z)$是单连通区域$D$内的解析函数，且$f’(z)$在$D$内连续。若$L$是$D$内任意一条简单闭曲线，则$$<br>\oint_L{f(z)\mathrm{d}z&#x3D;0}$$</p><h3 id="单连通区域-柯西-古萨积分定理"><a href="#单连通区域-柯西-古萨积分定理" class="headerlink" title="#单连通区域 #柯西-古萨积分定理"></a>#单连通区域 #柯西-古萨积分定理</h3><p>设$f(z)$是单连通区域$D$内的解析函数，若$L$是$D$内任意一周线，则 $$\oint_C{f(z)\mathrm dz}&#x3D;0$$</p>]]></content>
      
      
      <categories>
          
          <category> 复变函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复变函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/28/2023-09-28%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
      <url>/2023/09/28/2023-09-28%E6%A6%82%E7%8E%87%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h2><p>![[2023-09-14概率论#^b88979]]</p><h3 id="均匀分布-U-a-b"><a href="#均匀分布-U-a-b" class="headerlink" title="均匀分布$U(a,b)$"></a>均匀分布$U(a,b)$</h3><p>$$f(x)&#x3D;\left{\begin{matrix}\frac{1}{b-a}&amp;a&lt;x&lt;b\0&amp;其他\end{matrix}\right.$$</p><h3 id="指数分布-E-lambda"><a href="#指数分布-E-lambda" class="headerlink" title="#指数分布 $E(\lambda)$"></a>#指数分布 $E(\lambda)$</h3><p>$$f(x)&#x3D;\left{\begin{matrix}\lambda e^{-\lambda x}&amp;x&gt;0\0&amp;x\le0\end{matrix}\right.，\lambda&gt;0$$</p><ul><li>数学期望$\frac{1}{\lambda}$</li><li>方差$\frac{1}{\lambda^2}$</li></ul><h3 id="正态分布-N-mu-sigma-2"><a href="#正态分布-N-mu-sigma-2" class="headerlink" title="#正态分布 $N(\mu,\sigma^2)$"></a>#正态分布 $N(\mu,\sigma^2)$</h3><p><strong>极其重要，非常重要</strong><br>$$f(x)&#x3D;\frac{1}{\sqrt{2\pi}\sigma}e^{-\frac{(x-\mu)^2}{2\sigma^2}},-\infty&lt;x&lt;+\infty,\sigma&gt;0$$</p><ul><li>对称性</li><li>数学期望$\mu$</li><li>方差$\sigma^2$</li></ul>]]></content>
      
      
      <categories>
          
          <category> 概率论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> 概率论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/28/2023-09-28%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/"/>
      <url>/2023/09/28/2023-09-28%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="三角函数和双曲函数"><a href="#三角函数和双曲函数" class="headerlink" title="三角函数和双曲函数"></a>三角函数和双曲函数</h2><p>余弦：$cosz&#x3D;\frac{e^{iz}+e^{-iz}}2$<br>正弦：$sinz&#x3D;\frac{e^{iz}-e^{-iz}}2$<br>全复平面都解析，奇偶性，周期性，和差化积公式全部成立</p>]]></content>
      
      
      <categories>
          
          <category> 复变函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> 复变函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/27/2023-09-27%E6%A8%A1%E7%94%B5/"/>
      <url>/2023/09/27/2023-09-27%E6%A8%A1%E7%94%B5/</url>
      
        <content type="html"><![CDATA[<h2 id="晶体管-特性曲线"><a href="#晶体管-特性曲线" class="headerlink" title="#晶体管 特性曲线"></a>#晶体管 特性曲线</h2>]]></content>
      
      
      <categories>
          
          <category> 模电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模电 </tag>
            
            <tag> LaTeX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/27/2023-09-27%E7%89%A9%E7%90%86/"/>
      <url>/2023/09/27/2023-09-27%E7%89%A9%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h2><p>![[物理202309271319.jpeg]]<br>需要注意的公式：<br>![[2023-09-22物理#^83bd0b]]</p><h2 id="波的-干涉-和-衍射"><a href="#波的-干涉-和-衍射" class="headerlink" title="波的 #干涉 和 #衍射"></a>波的 #干涉 和 #衍射</h2><h3 id="惠更斯原理"><a href="#惠更斯原理" class="headerlink" title="#惠更斯原理"></a>#惠更斯原理</h3><blockquote><p>一个波阵面的每个点（面源）可各看做是一个产生球面子波的次级球面波的中心波源，次级波源的波速与频率等于初级波的波速与频率；而且，以后任何时刻波阵面的位置是所有这种子波的包络面</p></blockquote><p><em>子波和子波源</em></p><h3 id="波的-衍射"><a href="#波的-衍射" class="headerlink" title="波的 #衍射"></a>波的 #衍射</h3><p>定义</p><blockquote><p>指在介质中由于有障碍物或其他的不连续性而引起波改变传播方向的现象</p></blockquote><h3 id="波的干涉"><a href="#波的干涉" class="headerlink" title="波的干涉"></a>波的干涉</h3><h4 id="波的叠加原理"><a href="#波的叠加原理" class="headerlink" title="波的叠加原理"></a>波的叠加原理</h4><ul><li>传播的独立性</li><li>叠加规律</li></ul><h5 id="干涉的现象和规律"><a href="#干涉的现象和规律" class="headerlink" title="干涉的现象和规律"></a>干涉的现象和规律</h5>]]></content>
      
      
      <categories>
          
          <category> 物理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> 物理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/26/2023-09-26%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
      <url>/2023/09/26/2023-09-26%E6%A6%82%E7%8E%87%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h2><p>![[2023-09-14概率论#^b88979|全概率公式]]</p><p>![[2023-09-23概率论#泊松分布|泊松分布]]</p><h2 id="随机变量的分布函数"><a href="#随机变量的分布函数" class="headerlink" title="随机变量的分布函数"></a>随机变量的分布函数</h2><p><strong>高数注意</strong></p><h3 id="分布函数的定义"><a href="#分布函数的定义" class="headerlink" title="分布函数的定义"></a>分布函数的定义</h3><p>设X为一个随机变量，x是任意实数，称函数<br>$F(x)&#x3D;P{X\le x}, -\infty&lt;x&lt;+\infty$<br>为随机变量X的分布函数</p><ol><li><p>$0\le F(x)\le1,x\in(-\infty, +\infty)$</p></li><li><p>分布函数不是减函数</p></li><li><p>$F(-\infty)&#x3D;0,F(+\infty)&#x3D;1$</p></li><li><p>F(x)是右连续的，即：<br> $F(x+0)&#x3D;F(x)$<br>以上四个性质是辨别一个函数是否可以作为一个分布函数的<strong>充分必要条件</strong></p></li></ol><p>![[概率论202309260852.jpeg]]</p><h2 id="连续型随机变量及其概率密度"><a href="#连续型随机变量及其概率密度" class="headerlink" title="连续型随机变量及其概率密度"></a>连续型随机变量及其概率密度</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><blockquote><p>若对于随机变量X的分布函数F(X)，存在非负函数f(x)，使得对于任意实数x有：<br>$$<br> F(x)&#x3D;\int_{-\infty}^x f(t)\mathrm dt<br> $$<br> 则称X为连续型随机变量，其中被积函数f(x)称为X的概率密度函数（简称概率密度）</p></blockquote><h3 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h3><ol><li>非负性 $f(x)\ge0,\forall x\in(-\infty,+\infty)$</li><li>规范性$\int_{-\infty}^{+\infty}f(x)\mathrm dx&#x3D;1$<br>![[概率论202309260931.png]]</li><li></li></ol>]]></content>
      
      
      <categories>
          
          <category> 概率论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> 概率论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/26/2023-09-26%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/"/>
      <url>/2023/09/26/2023-09-26%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h2><h3 id="C-R方程-（-柯西-黎曼方程-）"><a href="#C-R方程-（-柯西-黎曼方程-）" class="headerlink" title="#C-R方程 （ #柯西-黎曼方程 ）"></a>#C-R方程 （ #柯西-黎曼方程 ）</h3><p>[[2023-09-21复变函数#^541cef]]</p><h2 id="调和函数"><a href="#调和函数" class="headerlink" title="调和函数"></a>调和函数</h2><p>定义：<br>![[Pasted image 20230926105656.png]]</p><p><strong>定理</strong>：函数$f(z)&#x3D;u(x,y)+iv(x,y)在区域D内解析\rightarrow u(x,y)和v(x,y)都是D$内的调和函数</p><h3 id="共轭调和函数"><a href="#共轭调和函数" class="headerlink" title="共轭调和函数"></a>共轭调和函数</h3><p>区域D内满足CR方程的两个调和函数u与v称为共轭调和函数<br><strong>定理</strong>：函数$f(z)&#x3D;u(x,y)+iv(x,y)在区域D内解析\leftrightarrow u(x,y)和v(x,y)互为D$内的共轭调和函数</p>]]></content>
      
      
      <categories>
          
          <category> 复变函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> 复变函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/25/2023-09-25%E6%A8%A1%E7%94%B5/"/>
      <url>/2023/09/25/2023-09-25%E6%A8%A1%E7%94%B5/</url>
      
        <content type="html"><![CDATA[<p>![[IMG_8759.jpeg]]</p><p>![[IMG_8760.jpeg]]</p>]]></content>
      
      
      <categories>
          
          <category> 模电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模电 </tag>
            
            <tag> LaTeX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/22/%E7%89%A9%E7%90%86/2023-09-22%E7%89%A9%E7%90%86/"/>
      <url>/2023/09/22/%E7%89%A9%E7%90%86/2023-09-22%E7%89%A9%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h2><h3 id="波-的产生条件"><a href="#波-的产生条件" class="headerlink" title="#波 的产生条件"></a>#波 的产生条件</h3><ul><li>弹性介质</li><li>波源<br>是<em>振动状态</em>的传播和<em>能量</em>的传播<br>横波，纵波的区别</li></ul><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>![[2023-09-20物理#横波与纵波]]</p><h3 id="基本物理参量"><a href="#基本物理参量" class="headerlink" title="基本物理参量"></a>基本物理参量</h3><p>![[2023-09-20物理#描述波的基本物理量]]<br>重点记忆公式：<br>$$<br>\begin{matrix}<br>u&#x3D;\frac{\lambda}{T} \<br>T&#x3D;\frac{2\pi}{\omega}&#x3D;\frac{1}{v}<br>\end{matrix}<br>$$</p><h3 id="描述波的其他相关概念"><a href="#描述波的其他相关概念" class="headerlink" title="描述波的其他相关概念"></a>描述波的其他相关概念</h3><h4 id="波线"><a href="#波线" class="headerlink" title="波线"></a>波线</h4><h4 id="波面"><a href="#波面" class="headerlink" title="波面"></a>波面</h4><h4 id="波前"><a href="#波前" class="headerlink" title="波前"></a>波前</h4><p><em>在各向同性的均匀介质中，波线与波面垂直</em></p><h3 id="平面简谐波"><a href="#平面简谐波" class="headerlink" title="平面简谐波"></a>平面简谐波</h3><ol><li>各质元等振幅等角频率但相位不同</li><li>波动方程<br>$y_0(t)Acos(\omega t+\phi)$</li></ol><p>$$<br>波动方程：\left{<br>\begin{matrix}<br>y_p(x,t)&#x3D;Acos[\omega(t\mp\frac xu)+\phi]\<br>y_p(x,t)&#x3D;Acos[2\pi(\frac tT \mp\frac x\lambda)+\phi]\<br>y_p(x,t)&#x3D;Acos(\omega t+\phi \mp\frac{2\pi}\lambda x)<br>\end{matrix}<br>\right.<br>$$</p><p>^83bd0b</p>]]></content>
      
      
      <categories>
          
          <category> 物理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/21/2023-09-21%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/"/>
      <url>/2023/09/21/2023-09-21%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="极限与连续"><a href="#极限与连续" class="headerlink" title="极限与连续"></a>极限与连续</h2><p>复变函数极限：</p><blockquote><p>$z\rightarrow z_0时，有|f(z)-A|\rightarrow 0称A为f(z)当z趋向于z_0时的极限$</p></blockquote><p>w&#x3D;u+iv，u，v连续则w连续</p><h2 id="C-R方程"><a href="#C-R方程" class="headerlink" title="#C-R方程"></a>#C-R方程</h2><p>$$<br>\left { \begin{matrix}<br>\frac{\delta u}{\delta x}&#x3D;\frac{\delta v}{\delta y} \<br>\frac{\delta u}{\delta y}&#x3D;-\frac{\delta v}{\delta x}<br>\end{matrix} \right.<br>$$</p><p>^541cef</p>]]></content>
      
      
      <categories>
          
          <category> 复变函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> 复变函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/21/%E6%A6%82%E7%8E%87%E8%AE%BA/2023-09-23%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
      <url>/2023/09/21/%E6%A6%82%E7%8E%87%E8%AE%BA/2023-09-23%E6%A6%82%E7%8E%87%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="随机变量及其分布"><a href="#随机变量及其分布" class="headerlink" title="随机变量及其分布"></a>随机变量及其分布</h2><p><em>样本空间数量化</em><br>e.g.<br>一个骰子有1,2,3,4,5,6六面，<br>设样本空间X<br>$$<br>X&#x3D;X(e)&#x3D;\left{\begin{matrix}<br>1 &amp;, e&#x3D;1\<br>2 &amp;, e&#x3D;2\<br>3 &amp;, e&#x3D;3\<br>4 &amp;, e&#x3D;4\<br>5 &amp;, e&#x3D;5\<br>6 &amp;, e&#x3D;6<br>\end{matrix}\right.<br>$$</p><p><strong>定义</strong>：</p><blockquote><p>设E为随机实验，S是样本空间，如果对S中的每一个样本点e，有一个实数X&#x3D;X(e)与之对应，则称这个定义在样本空间S上的单值实值函数X&#x3D;X(e)为随机变量，随机变量的取值用小写字母表示。</p></blockquote><p>![[概率论202309201343.jpeg]]</p><p>离散型随机变量随机变量分布及分布律：<br>$P{X&#x3D;X_{k}}&#x3D;p_{k},k&#x3D;1,2,\Lambda$</p><h3 id="0-1分布"><a href="#0-1分布" class="headerlink" title="0-1分布"></a>0-1分布</h3><h3 id="二项分布"><a href="#二项分布" class="headerlink" title="二项分布"></a>二项分布</h3><h3 id="泊松分布"><a href="#泊松分布" class="headerlink" title="#泊松分布"></a>#泊松分布</h3><p>$P{X&#x3D;k}&#x3D;\frac{\lambda^k}{k!}e^{-\lambda}$</p><h2 id="泊松定理"><a href="#泊松定理" class="headerlink" title="#泊松定理"></a>#泊松定理</h2><p>![[概率论202309211432.jpeg]]</p><p>![[概率论202309211433.jpeg]]</p>]]></content>
      
      
      <categories>
          
          <category> 概率论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> 概率论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/20/README/"/>
      <url>/2023/09/20/README/</url>
      
        <content type="html"><![CDATA[<h1 id="MarkdownNote"><a href="#MarkdownNote" class="headerlink" title="MarkdownNote"></a>MarkdownNote</h1><p>这是所有笔记的记录处，Blog下放了博客用的内容</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/20/%E6%A8%A1%E7%94%B5/2023-09-20%E6%A8%A1%E7%94%B5/"/>
      <url>/2023/09/20/%E6%A8%A1%E7%94%B5/2023-09-20%E6%A8%A1%E7%94%B5/</url>
      
        <content type="html"><![CDATA[<p>交流转直流：<br>电压等于$\frac{\sqrt2}{\pi}$倍有效值<br>二极管最大整流电流$I_{OM}\ge I_o$<br>最高反响电压$U_{DRM} \ge \sqrt2 U_2$<br>![[物理202309201549.jpeg]]<br>![[物理202309201551.jpg]]</p><p>![[物理202309201619.jpeg]]</p>]]></content>
      
      
      <categories>
          
          <category> 模电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模电 </tag>
            
            <tag> LaTeX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/20/%E7%89%A9%E7%90%86/2023-09-20%E7%89%A9%E7%90%86/"/>
      <url>/2023/09/20/%E7%89%A9%E7%90%86/2023-09-20%E7%89%A9%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h2><h3 id="简谐运动的方程"><a href="#简谐运动的方程" class="headerlink" title="简谐运动的方程"></a>简谐运动的方程</h3><p>见[[2023-09-13物理#简谐振动]]<br>$$\left{\begin{matrix}<br>\omega&#x3D;\frac{2\pi}{T} \<br>v&#x3D;\frac{1}{T}<br>\end{matrix}\right.$$<br>$$\left{\begin{matrix}<br>x&#x3D;Acos(\omega t+\phi)&#x3D;Acos(\frac{2\pi}{T}+\phi) \<br>v&#x3D;-A\omega sin(\omega t+\phi) \<br>a&#x3D;-A\omega^2cos(\omega t+\phi)<br>\end{matrix}\right.$$</p><h3 id="旋转矢量法"><a href="#旋转矢量法" class="headerlink" title="旋转矢量法"></a>旋转矢量法</h3><h2 id="简谐振动的合成"><a href="#简谐振动的合成" class="headerlink" title="简谐振动的合成"></a>简谐振动的合成</h2><p><em>目前研究简单情况：多个振动可合成为一个简谐振动</em></p><p>$$<br>\left{\begin{matrix}<br>x_1&#x3D;Acos(\omega t+\phi_1) \<br>x_2&#x3D;Acos(\omega t+\phi_2)<br>\end{matrix} \right.<br>$$<br>$$\downarrow$$<br>$$x&#x3D;Acos(\omega t+\phi)$$</p><p>同方向同频率相位差恒定<br>两个简谐运动合成后合振动为一个新的简谐振动<br><em>建议使用矢量和进行合成</em><br>![[物理202309201356.jpg]]</p><h3 id="特殊情形"><a href="#特殊情形" class="headerlink" title="特殊情形"></a>特殊情形</h3><ol><li>$\Delta\phi&#x3D;\phi_2-\phi_1&#x3D;\pm2k\pi, k\in\mathbb{Z}; A&#x3D;A_1+A_2$ 同相合成</li><li>$\Delta\phi&#x3D;\phi_2-\phi_1&#x3D;\pm(2k+1)\pi, k\in\mathbb{Z}; A&#x3D;|A_1-A_2|$ 反相合成，$A_1&#x3D;A_2$时，A&#x3D;0（应用：主动降噪）</li></ol><h2 id="关于波动的基本概念"><a href="#关于波动的基本概念" class="headerlink" title="关于波动的基本概念"></a>关于波动的基本概念</h2><h3 id="弹性介质和波源"><a href="#弹性介质和波源" class="headerlink" title="弹性介质和波源"></a>弹性介质和波源</h3><h3 id="机械波"><a href="#机械波" class="headerlink" title="#机械波"></a>#机械波</h3><ul><li>波动是振动状态的传播</li><li>是能量的传播</li><li>不是质点位移</li></ul><h3 id="横波与纵波"><a href="#横波与纵波" class="headerlink" title="横波与纵波"></a>横波与纵波</h3><ul><li>质点运动方向垂直是横波</li><li>与运动方向相同则是纵波</li></ul><h3 id="描述波的基本物理量"><a href="#描述波的基本物理量" class="headerlink" title="描述波的基本物理量"></a>描述波的基本物理量</h3><ul><li>波长$\lambda$：沿同一波线上相位差为2$\pi$的两个相邻质点间的距离，单位$m$</li><li>周期$T$：一个完整的波（一个波长）通过波线上某点所需时间，单位$s$</li><li>频率$v$：单位时间内通过波线上某点完整波的数目，单位$Hz$</li><li>角速度$\omega$：2$\pi$秒内通过波线上某点完整波的数目，单位$rad&#x2F;s$</li><li>波速$u$：某一振动状态单位时间沿波线传播的距离，单位$m&#x2F;s$</li></ul>]]></content>
      
      
      <categories>
          
          <category> 物理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> 物理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/19/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/2023-09-19%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/"/>
      <url>/2023/09/19/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/2023-09-19%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="作业讲解"><a href="#作业讲解" class="headerlink" title="作业讲解"></a>作业讲解</h2><p>先虚实分离<br>$e^{i\alpha}&#x3D;e^{-y+ix}\newline&#x3D;e^{-y}\cdot e^{ix}$<br>$e^{ix}$：欧拉公式</p><p>复数相乘，辐角相加</p><p>![[Pasted image 20230919105656.png]]</p><h2 id="复数-与-复变函数"><a href="#复数-与-复变函数" class="headerlink" title="#复数 与 #复变函数"></a>#复数 与 #复变函数</h2><h3 id="点集"><a href="#点集" class="headerlink" title="点集"></a>点集</h3><p><strong>复数要从实数类比</strong><br>为积分做准备</p><h3 id="1-直角方程"><a href="#1-直角方程" class="headerlink" title="1. 直角方程"></a>1. 直角方程</h3><p><strong>z换x,y：</strong><br>$x\rightarrow \frac{z+\overline z}{2},y\rightarrow \frac{z+\overline z}{2i}$<br><strong>x,y换z：</strong><br>$z&#x3D;x+yi$</p><h3 id="2-参数方程"><a href="#2-参数方程" class="headerlink" title="2. #参数方程"></a>2. #参数方程</h3><p>$$\left{\begin{matrix}<br>x&#x3D;x(t) \<br>y&#x3D;y(t)<br>\end{matrix}\right.$$<br>转换为：<br>$z(t)&#x3D;x(t)+iy(t)$</p><p><em>特殊例题：</em><br>    $Im(i-\overline z)&#x3D;5$<br>    转换为xy方程<br>    虚实分离<br>    变成y&#x3D;4</p><ul><li>简单闭合曲线</li><li>简单不闭合曲线</li><li>不简单闭合曲线（有自交点）</li><li>不简单不闭合曲线（有自交点而且不闭合）</li></ul><h3 id="邻域"><a href="#邻域" class="headerlink" title="#邻域"></a>#邻域</h3><p>![[Pasted image 20230919112742.png]]</p><p>$r_{1}&lt;|z-z_{0}&lt;r_{2}$圆环域</p><p><em>不研究不联通区域</em><br>联通区域：<br>    #单联通区域<br>    #复联通区域<br><strong>重点记忆的常见域</strong></p><ul><li>$z^2\rightarrow x^2-y^2$</li></ul><h2 id="复变函数"><a href="#复变函数" class="headerlink" title="复变函数"></a>复变函数</h2><p>表示方法：<br>$w&#x3D;f(z)$<br>一个复变函数相当于两个二元实变函数<br>$z&#x3D;x+iy,w&#x3D;u+iv$<br>$$\left{\begin{matrix}<br>u&#x3D;u(x,y) \<br>v&#x3D;v(x,y)<br>\end{matrix}\right.$$<br>定义域是样子二元函数的定义域的样子</p><p>画图无法画出（要画出四个变量）<br>分两张图即可</p>]]></content>
      
      
      <categories>
          
          <category> 复变函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> 复变函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/19/%E6%A6%82%E7%8E%87%E8%AE%BA/2023-09-19%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
      <url>/2023/09/19/%E6%A6%82%E7%8E%87%E8%AE%BA/2023-09-19%E6%A6%82%E7%8E%87%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="事件独立性"><a href="#事件独立性" class="headerlink" title="事件独立性"></a>事件独立性</h2><p><strong>每个事件间没有重叠</strong><br>$P(AB)&#x3D;P(A)P(B)$<br>A对B的发生没有影响<br>设ABC相互独立<br>那么有：<br>$$\left.\begin{matrix}<br>P(AB)&#x3D;P(A)P(B) \<br>P(AC)&#x3D;P(A)P(C) \<br>P(BC)&#x3D;P(B)P(C)<br>\end{matrix}\right} ABC相互独立$$<br>$$P(ABC)&#x3D;P(A)+P(B)+P(C)$$</p><h3 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h3><ul><li>设AB相互独立，则有：<br>  若P(A)&gt;0，则有P(B|A)&#x3D;P(B)<br>  若P(B)&gt;0，则有P(A|B)&#x3D;P(A)</li><li>S与A相互独立，$\emptyset$与A相互独立</li><li>A与B相互独立，则：<br>  $\overline{A}$与B，A与$\overline{B}$，$\overline{A} 与 \overline{B}$也相互独立</li></ul><p>并转交：<br>$$P(\bigcup_{i&#x3D;1}^{n}A_{i})&#x3D;1-\overline{P(\bigcup_{i&#x3D;1}^nA_i)}&#x3D;1-P(\bigcap_{i&#x3D;1}^nA_i)$$</p><h2 id="n重贝努利实验"><a href="#n重贝努利实验" class="headerlink" title="#n重贝努利实验"></a>#n重贝努利实验</h2><h3 id="1-独立实验序列"><a href="#1-独立实验序列" class="headerlink" title="1. 独立实验序列"></a>1. 独立实验序列</h3><blockquote><p>设E为随机实验，如果在相同条件下将实验E重复进行若干次，且各实验结果互不影响，则由这若干次实验构成的序列称为独立实验序列</p></blockquote><h3 id="2-n重贝努利实验"><a href="#2-n重贝努利实验" class="headerlink" title="2. #n重贝努利实验"></a>2. #n重贝努利实验</h3><blockquote><p>设E为随机实验，相同条件下将E重复若干次，若：<br>    由这n次实验构成的序列是独立实验序列；<br>    每次实验只有两个结果：$A与\overline{A}$；<br>    每次试验A发生的概率为常数p，即P(A)&#x3D;p<br>则该实验序列为n重贝努利实验</p></blockquote><h3 id="n重贝努利事件A恰好发生k次概率："><a href="#n重贝努利事件A恰好发生k次概率：" class="headerlink" title="n重贝努利事件A恰好发生k次概率："></a>n重贝努利事件A恰好发生k次概率：</h3><p>![[Pasted image 20230921132649.png]]</p>]]></content>
      
      
      <categories>
          
          <category> 概率论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> 概率论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/18/%E6%A8%A1%E7%94%B5/2023-09-18%E6%A8%A1%E7%94%B5/"/>
      <url>/2023/09/18/%E6%A8%A1%E7%94%B5/2023-09-18%E6%A8%A1%E7%94%B5/</url>
      
        <content type="html"><![CDATA[<h2 id="特殊二极管"><a href="#特殊二极管" class="headerlink" title="特殊二极管"></a>特殊二极管</h2><ul><li><strong>稳压二极管</strong><br>面接触型二极管，利用 #反向击穿 稳压特性，反接为正常接法<br>![[Pasted image 20230918102328.png]]<br>![[Pasted image 20230918102426.png]]<br>稳定电压$U_{z}$：为反向击穿电压$U_{BR}$<br>稳定电流$I_{Z}$：在稳定状态时的参考电流</li><li><strong>发光二极管</strong><br>工作条件：正向偏置</li><li><strong>光敏二极管</strong></li></ul><h2 id="三极管"><a href="#三极管" class="headerlink" title="三极管"></a>三极管</h2><p>aka半导体三极管，双极性晶体管或简称晶体管</p><ul><li><p><strong>N-P-N型三极管</strong><br>![[Pasted image 20230918111037.png]]<br>![[Pasted image 20230918111137.png]]<br>![[Pasted image 20230918111320.png]]</p></li><li><p><strong>P-N-P型三极管</strong><br>![[Pasted image 20230918111151.png]]<br>![[Pasted image 20230918111335.png]]</p></li></ul><p>NPN信号放大必须<strong>C高B中E低</strong><br>PNP信号放大必须<strong>E高B中C低</strong></p><h3 id="如何判断是NPN还是PNP"><a href="#如何判断是NPN还是PNP" class="headerlink" title="如何判断是NPN还是PNP"></a>如何判断是NPN还是PNP</h3><ol><li>先看三级，中间电压为B</li><li>再看压差，硅0.5-0.8，锗0.1-0.3，压差在区间内的，低电位为正偏方向<ul><li>若+0.7在侧边，那么为NPN</li><li>若+0.7在中间，那么为PNP</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 模电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模电 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/14/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/2023-09-14%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/"/>
      <url>/2023/09/14/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/2023-09-14%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>复数运算</p><h2 id="复数加减法"><a href="#复数加减法" class="headerlink" title="复数加减法"></a>复数加减法</h2><p>![[Pasted image 20230914152541.png]]<br>![[Pasted image 20230914152742.png]]<br>#角度旋转公式 ：<br>$sin(\alpha+\beta)&#x3D;sin\alpha cos\beta+cos\alpha sin\beta$<br>$sin(\alpha-\beta)&#x3D;sin\alpha cos\beta-cos\alpha sin\beta$<br>$cos(\alpha+\beta)&#x3D;cos\alpha cos\beta-sin\alpha sin\beta$<br>$cos(\alpha-\beta)&#x3D;cos\alpha cos\beta+sin\alpha sin\beta$</p><p>![[Pasted image 20230914160108.png]]</p><p>![[Pasted image 20230914161824.png]]</p>]]></content>
      
      
      <categories>
          
          <category> 复变函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复变函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/14/%E6%A6%82%E7%8E%87%E8%AE%BA/2023-09-14%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
      <url>/2023/09/14/%E6%A6%82%E7%8E%87%E8%AE%BA/2023-09-14%E6%A6%82%E7%8E%87%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<p>条件概率，乘法定理<br>$P(A|B)$<br>理解为：</p><ul><li>B为因，A为果</li><li>B已发生，A未发生<br>$P(A|B)&#x3D;\frac{P(AB)}{PB}$</li></ul><p><strong>条件概率也是概率</strong>，所以满足[[2023-09-12概率论#概率的公理化定义|三条公理和五条性质]]<br>但是样本空间有变化：样本空间缩减为$S_{B}$</p><p><strong>全概率公式</strong>： #全概率公式 概率大于0，多因求果<br>设S是随机实验E的样本空间，$A,B_1,B_2,…,B_n为E的时间，若P(B_i)&gt;0(i&#x3D;1,2,\Lambda,n)且B_1,B_2,\Lambda.B+n是$样本空间S的有一个划分，则$$\begin{matrix}<br>P(A)&#x3D;\sum_{i&#x3D;1}^nP(B_i)P(A|B_i) \<br>P(B_k|A)&#x3D;\frac{P(A|B)PB_1}{\Sigma P（A_1|B)PB_1}\end{matrix}$$ ^b88979</p><p>例子：甲箱种有5个正品3个次品，乙箱中有4个正品3个次品，从甲箱中人去任取3个产品放入乙箱，然后从乙箱中任取1个产品，求该产品是正品的概率<br>解：设A：从乙箱中所取产品是正品<br>$B_{i}$：“从甲箱中所取3个产品中有i个正品”，$i&#x3D;0,1,2,3$<br>所求概率为：<br>$P(A)&#x3D;\sum_{i&#x3D;0}^{3}P(B_{i})P(A|B_{i})$<br>$$<br>&#x3D;\frac{C_{3}^{3}}{C_{8}^{3}}\cdot\frac{4}{10}+\frac{C_{5}^{1}C_{3}^{2}}{C_{8}^{3}}\cdot\frac{5}{10}+\frac{C_{5}^{2}C_{3}^{1}}{C_{8}^{3}}\cdot\frac{6}{10}+\frac{C_{5}^{3}}{C_{8}^{3}}\cdot\frac{7}{10}<br>$$$$&#x3D;\frac{329}{560}&#x3D;0.5875$$</p><h3 id="贝叶斯公式"><a href="#贝叶斯公式" class="headerlink" title="贝叶斯公式"></a>贝叶斯公式</h3><p>![[Pasted image 20230921132516.png]]</p>]]></content>
      
      
      <categories>
          
          <category> 概率论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> 概率论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/13/%E7%89%A9%E7%90%86/2023-09-13%E7%89%A9%E7%90%86/"/>
      <url>/2023/09/13/%E7%89%A9%E7%90%86/2023-09-13%E7%89%A9%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h2 id="振动"><a href="#振动" class="headerlink" title="振动"></a>振动</h2><p>定义：</p><blockquote><p>机械振动是物体在一定位置附近所作的周期性往复的运动</p></blockquote><h3 id="简谐振动"><a href="#简谐振动" class="headerlink" title="#简谐振动"></a>#简谐振动</h3><ul><li>弹簧振子</li></ul><p>平衡位置O为坐标原点，</p><p>运动学特征：<br>$x&#x3D;Acos(\omega t+\phi)$<br>$v&#x3D;\frac{dx}{dt}&#x3D;-\omega Asin(\omega t+\phi)$<br>$a&#x3D;\frac{d^2x}{dt^2}&#x3D;-\omega^2Acos\omega t+\phi$<br>![[Pasted image 20230913135328.png]]<br>物体在简谐运动时，其 #位移 ， #速度 ， #加速度 都是<strong>周期性变化</strong><br>（采用余弦形式表示运动）</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>受力角度来说 动力学特征 $f&#x3D;-kx$</li><li>加速度角度来说 运动学特征 $a&#x3D;-\omega^2$x</li><li>从位移角度来看 运动学特征 $x&#x3D;Acos(\omega t+\phi)$<br>证明是否是简谐运动，三证一即可</li></ul><h3 id="振幅"><a href="#振幅" class="headerlink" title="振幅"></a>振幅</h3><p>定义振幅A：</p><blockquote><p>作简谐运动的物体离开平衡位置的最大位移的绝对值</p></blockquote><ul><li>恒为正，单位为米</li><li>振幅大小与振动系统能量有关，由初始条件决定</li></ul><h3 id="周期"><a href="#周期" class="headerlink" title="周期"></a>周期</h3><blockquote><p>物体做一次完全震动所需的时间T，单位为秒</p></blockquote><p>$\omega T&#x3D;2\pi, T&#x3D;\frac{2\pi}{\omega}$</p><p>频率$v&#x3D;\frac{1}{T}&#x3D;\frac{\omega}{2\pi}$</p><h3 id="圆频率"><a href="#圆频率" class="headerlink" title="圆频率"></a>圆频率</h3><p>物体在2\pi秒内所作的完全振动的次数，$\omega$表示。单位弧度&#x2F;秒<br>$\omega&#x3D;2\pi v&#x3D;\frac{2\pi}{T}$<br>简谐运动基本特性是周期性<br>性质由其系统本身性质决定<br>$\omega&#x3D;\sqrt{\frac{k}{m}},v&#x3D;\frac{1}{2\pi}\sqrt{\frac{k}{m}}.T&#x3D;2\pi\sqrt{\frac{k}{m}}$<br>$x&#x3D;Acos(\omega t+\phi)&#x3D;Acos(\frac{2\pi}{T}t+\phi)&#x3D;Acos(2\pi vt+\phi)$</p><h3 id="相位"><a href="#相位" class="headerlink" title="相位"></a>相位</h3><p>$\omega t+\phi$<br>初相位：$\phi$<br>相位差：两个振动在同一时刻的相位之差活同一振动在不同时刻的相位之差<br>$\Delta\phi&#x3D;(\omega t+\phi_{20})-(\omega t+\phi_{10})&#x3D;\phi_{20}-\phi_{10}$<br>$$\begin{matrix}<br>\Delta\phi&gt;0  &amp;  &amp; 质点2的振动超前质点1的振动\<br>\Delta\phi&lt;0  &amp;  &amp; 质点2的振动落后质点1的振动\<br>\Delta\phi&#x3D;\pm2k\pi,  &amp; k&#x3D;0,1,2,…, &amp; 同向（步调相同）\<br>\Delta\phi&#x3D;\pm(2k+1)\pi,  &amp; k&#x3D;0,1,2,…, &amp; 反向（步调相反）\<br>\end{matrix}$$<br>$x&#x3D;Acos(\omega t+\phi)$<br>$v&#x3D;\frac{\mathrm{d}x}{\mathrm{d}t}&#x3D;-\omega Asin(\omega t+\phi$</p><p>$x_{0}&#x3D;Acos\phi$<br>$v_{0}&#x3D;-A\omega sin(\phi)$</p><p><strong>$A&#x3D;\sqrt{x_{0}^2+(\frac{v_{0}}{\omega})^2}$</strong><br><strong>$tan\phi&#x3D;-\frac{v_{0}}{\omega x_{0}}$</strong></p><p>$\phi$一般在$-\pi和\pi$（或$0和2\pi$）之间<br>一般来说有两个值，由初始条件判断应取哪个值<br>由$A&#x3D;\sqrt{x_{0}^2+(\frac{v_{0}}{\omega})^2}$<br>求A，然后由<br>$$x_{0}&#x3D;Acos\phi$$<br>$$v_{0}&#x3D;-A\omega sin\phi$$<br>共同部分求$\phi$<br>$a_{m}&#x3D;\omega^2A&#x3D;v_{m}\omega$</p><p>初始沿x轴负方向运动则$\phi\in(0,\pi]$<br>初始沿x轴正方向运动则$\phi\in(-\pi,0]$</p>]]></content>
      
      
      <categories>
          
          <category> 物理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> 物理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/13/%E6%A8%A1%E7%94%B5/2023-09-13%E6%A8%A1%E7%94%B5/"/>
      <url>/2023/09/13/%E6%A8%A1%E7%94%B5/2023-09-13%E6%A8%A1%E7%94%B5/</url>
      
        <content type="html"><![CDATA[<p>![[Pasted image 20230913150830.png]]<br>反向击穿部分可逆<br>电压变化率小<br>可逆击穿可以用来控制电路<br>分为齐纳击穿和雪崩击穿<br>齐纳击穿：参杂浓度高，反向电压使载流子高速运动形成强电场毁坏耗尽层内，载流子数量激增<br>雪崩击穿：参杂浓度低，较大反向电压使少子高速运动，毁坏共价键，载流子数量激增<br>热击穿：PN结电流点或电压较大，使PN结温度升高，形成永久损害</p><p>![[Pasted image 20230913151752.png]]</p><p>![[Pasted image 20230913152147.png]]</p><p>![[Pasted image 20230913152210.png]]</p>]]></content>
      
      
      <categories>
          
          <category> 模电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模电 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/12/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/2023-09-12%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/"/>
      <url>/2023/09/12/%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/2023-09-12%E5%A4%8D%E5%8F%98%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="复数"><a href="#复数" class="headerlink" title="#复数"></a>#复数</h2><h3 id="复数的概念"><a href="#复数的概念" class="headerlink" title="复数的概念"></a>复数的概念</h3><p>形如：$z&#x3D;x+yi$<br>其中$x,y∈R$<br>#虚数 单位i的特点：$i^2&#x3D;-1$</p><p>记$x&#x3D;Re(z),y&#x3D;Im(z)$<br>复数相等：<br>$x1&#x3D;x2,y1&#x3D;y2$<br>共轭：$x_{1}&#x3D;x_{2},y_{1}&#x3D;-y_{2}$<br>$x&#x3D;0,y\neq0$时，为纯虚数<br>$x\neq0,y&#x3D;0$时，看作实数</p><h3 id="复数四则运算"><a href="#复数四则运算" class="headerlink" title="复数四则运算"></a>复数四则运算</h3><p>记$A&#x3D;x_{1}+y_{1}i, B&#x3D;x_{2}+y_{2}i$<br>和：$A+B&#x3D;(x_{1}+x_{2})+(y_{1}+y_{2})i$<br>差：$A-B&#x3D;(x_{1}-x_{2})+(y_{1}-y_{2})i$<br>积：$A\cdot B&#x3D;(x_{1}x_{2}-y_{1}y_{2})+(x_{1}x_{2}+y_{1}y_{2})i$<br>商：$A\div B&#x3D;\frac{(x_{1}x_{2}+y_{1}y_{2})}{x_{2}^2+y_{2}^2}+i\frac{x_{2}y_{1}-x_{1}y_{2}}{x_{2}^2+y_{2}^2}$</p><h2 id="复数的-模-与-辐角"><a href="#复数的-模-与-辐角" class="headerlink" title="复数的 #模 与 #辐角"></a>复数的 #模 与 #辐角</h2><h4 id="复数的几何表示"><a href="#复数的几何表示" class="headerlink" title="复数的几何表示"></a>复数的几何表示</h4><p><strong>复数可以与复平面上的点一一对应</strong><br>$|z|$：z的模<br>$|z|&#x3D;r&#x3D;\sqrt{x^2+y^2}$<br>$|x|&lt;|z|, |y|&lt;|z|$<br>$|z|\le|x|+|y|$<br>$|z|\ge0$<br>$z\cdot\overline{z}&#x3D;|z|^2&#x3D;|z^2|&#x3D;|\overline{z}|^2&#x3D;|\overline{z}^2|$</p><h4 id="复数的辐角"><a href="#复数的辐角" class="headerlink" title="复数的辐角"></a>复数的辐角</h4><blockquote><p>从<strong>x轴正向</strong>到向量$\overrightarrow{OP}$的转角$\theta$</p></blockquote><p>辐角：$Argz&#x3D;\theta+2k\pi(k\in\mathbb{z})$</p><ul><li><strong>辐角是一个集合</strong></li><li>辐角是一个有向角</li><li>$z&#x3D;0$时辐角任意<br>若$-\pi&lt;\theta\le\pi$，则$\theta$为$Argz$的 #主值 。<br>$Argz&#x3D;argz+2k\pi(k\in\mathbb{z})$</li></ul><p>$z\neq0$时：<br>$$<br>argz&#x3D;\begin{cases}<br>arctan(\frac{y}{x})  &amp; \text{ , } x&gt;0 &amp; 这个是一，四象限内可用的公式\<br>\pm\frac{\pi}{2}  &amp; \text{ , } x&#x3D;0,y\neq0 \<br>arctan(\frac{y}{x}\pm\pi)  &amp; \text{ , } x&lt;0,y\neq0 \<br>\pi  &amp; \text{ , } x&lt;0,y&#x3D;0<br>\end{cases}<br>$$<br>其中$arctan\frac{y}{x}\in(-\frac{\pi}{2},\frac{\pi}{2})$</p><h4 id="复数三角表示"><a href="#复数三角表示" class="headerlink" title="复数三角表示"></a>复数三角表示</h4><p>$z&#x3D;x+iy$<br>变换：<br>$$\left{\begin{matrix}<br> x&#x3D;rcos\theta\<br> y&#x3D;rsin\theta<br>\end{matrix}\right.<br>$$<br>得：$z&#x3D;r(cos\theta+isin\theta)$<br>#欧拉公式 ：<br>$$cos\theta+isin\theta&#x3D;e^{i\theta}(\theta\in\mathbb{R})$$<br>得：$z&#x3D;re^{i\theta}$</p><h3 id="加法和减法"><a href="#加法和减法" class="headerlink" title="加法和减法"></a>加法和减法</h3><p>几何意义与向量加减法相同<br>其中：$|z|&#x3D;|\overline{z}|,arg(z)&#x3D;-arg(\overline{z})$（共轭辐角为本体相反数）</p>]]></content>
      
      
      <categories>
          
          <category> 复变函数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复变函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/12/%E6%A6%82%E7%8E%87%E8%AE%BA/2023-09-12%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
      <url>/2023/09/12/%E6%A6%82%E7%8E%87%E8%AE%BA/2023-09-12%E6%A6%82%E7%8E%87%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<p>#概率 的初始是博弈</p><h2 id="第一节-随机事件"><a href="#第一节-随机事件" class="headerlink" title="第一节 随机事件"></a>第一节 随机事件</h2><h3 id="随机现象与随机试验"><a href="#随机现象与随机试验" class="headerlink" title="随机现象与随机试验"></a>随机现象与随机试验</h3><p>#随机 产生的现象<br>随机试验特点：</p><ul><li>相同条件下可重复</li><li>实验前可以预知所有的结果</li><li>每次实验前不能确定会出现哪个结果</li></ul><h3 id="样本空间和随机事件"><a href="#样本空间和随机事件" class="headerlink" title="样本空间和随机事件"></a>样本空间和随机事件</h3><h4 id="样本空间"><a href="#样本空间" class="headerlink" title="#样本空间"></a>#样本空间</h4><p>#样本点 使用e表示<br>样本点的全体构成的集合称为样本空间，记作S</p><ul><li>有限</li><li>无限可列出</li><li>无限不可列出<br>称 #样本空间 S的子集为E的 #随机事件</li></ul><h4 id="随机事件"><a href="#随机事件" class="headerlink" title="#随机事件"></a>#随机事件</h4><p>基本事件：有一个样本点组成的单点集<br><strong>事件必须用集合表示</strong><br>不可能事件：空集</p><h3 id="事件间的关系和运算"><a href="#事件间的关系和运算" class="headerlink" title="事件间的关系和运算"></a>事件间的关系和运算</h3><ul><li>#文氏图 #Venn diagram</li></ul><p>#事件 的包含：约等于 #集合 的包含</p><ul><li>$A\subseteq B$→事件A发生时，事件B也必然发生</li><li>$A\cup B$→事件A和事件B至少有一个发生</li><li>$A\cap B$→事件A与事件B同时发生</li><li>$A-B$→事件A发生但事件B不发生</li><li>$A\cap B&#x3D;\emptyset$ 时，事件AB互不相容</li><li>A为B的对立事件时，事件AB互不相容且A并B等于样本空间，A的补等于S-A</li></ul><p>具有交换律，结合律，分配律；</p><ul><li>$A-B&#x3D;A\cap \overline{B}$</li><li>$A-B&#x3D;A-AB$</li><li>$A\cup B&#x3D;A\cup (B-A)&#x3D;A\cup (B-AB)$</li><li>$A\cap \overline{A}&#x3D;S$</li></ul><h2 id="频率和概率"><a href="#频率和概率" class="headerlink" title="频率和概率"></a>频率和概率</h2><h3 id="频率"><a href="#频率" class="headerlink" title="频率"></a>频率</h3><p>$$0\le f_{n}(A)\le 1$$<br>$$f_{n}(S)&#x3D;1$$</p><h3 id="概率的统计定义"><a href="#概率的统计定义" class="headerlink" title="概率的统计定义"></a>概率的统计定义</h3><p>相同条件下随着试验次数n增大，事件A出现的平吕稳定于常数p则定义事件A的概率为p，记作$P(A)&#x3D;p$</p><h3 id="概率的公理化定义"><a href="#概率的公理化定义" class="headerlink" title="概率的公理化定义"></a>概率的公理化定义</h3><p>设E是一个随机试验，S为样本空间，对于E的任意一个事件A，规定一个数P(A)满足以下<strong>三条公理</strong>：</p><ul><li>非负性：$P(A)\in [0,1]$；</li><li>规范性：$P(S)&#x3D;1$</li><li>可列可加性：$A_{1},A_{2},…,A_{n},…$事件互不相容时，$P(A_{1}\cup A_{2}\cup …\cup A_{n}\cup …)&#x3D;P(A_{1})+P(A_{2})+…+P(A_{n})+…$<br>则称P(A)为事件A的概率。</li></ul><h4 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h4><ul><li>空集概率为0</li><li>有限可加性：设事件互不相容，则事件集合概率为各自概率和</li><li>逆事件概率为1-概率</li><li>差事件的概率：AB为两个事件，若$A\subseteq B$，则有$P(B-A)&#x3D;P(B)-P(A)$<ul><li>差事件补充：若AB为任意两个事件，则有$P(B-A)&#x3D;P(B\overline{A})&#x3D;P(B)-P(AB)$</li></ul></li><li>加法定理：对任意两个随机事件AB，有$P(A\cup B)&#x3D;P(A)+P(B)-P(AB)$</li></ul><h3 id="加法定理和乘法定理"><a href="#加法定理和乘法定理" class="headerlink" title="加法定理和乘法定理"></a>加法定理和乘法定理</h3><h4 id="加法定理"><a href="#加法定理" class="headerlink" title="加法定理"></a>加法定理</h4><p>完成一件事有n类方法，第i类方法中有$m_{i}$种具体方法，则完成这件事共有$$\sum_{i&#x3D;1}^{n}mi$$种不同方法。</p><h4 id="乘法定理："><a href="#乘法定理：" class="headerlink" title="乘法定理："></a>乘法定理：</h4><p>完成一件事情有n个步骤，第i个步骤中有$m_{i}$种具体方法(i&#x3D;1,2,…,n)，则完成整件事情共有$$\prod_{i&#x3D;1}^{n}mi$$种不同方法。</p><h3 id="古典概型"><a href="#古典概型" class="headerlink" title="古典概型"></a>古典概型</h3><p>如果随机试验具有以下特点：</p><ul><li>有限性：样本空间中样本点个数有限；</li><li>等可能性：每个基本事件发生可能性相同，<br>则该数学模型为等可能模型，也成为古典概型</li></ul><p>设样本空间$S&#x3D;{e_{1},e_{2},…,e_{n}}$<br>随机事件A有k个样本点：$A&#x3D;{e_{i1},e_{i2},…,e_{ik}}$<br>则：$$P(A)&#x3D;\frac{k}{n}&#x3D;\frac{A中样本点个数}{S中样本点总数}$$</p><h3 id="几何概率"><a href="#几何概率" class="headerlink" title="几何概率"></a>几何概率</h3><ul><li>属于无限个样本点的概率模型<br>设样本空间S为一个平面区域，随机事件A是一个子区域，假定点落到S内任一子区域的可能性大小与面积成正比，则事件A概率为：$P(A)&#x3D;\frac{S_{A}}{S_{总}}$<br>推广：计算公式$$P(A)&#x3D;\frac{A所占度量}{S的几何度量}$$</li></ul>]]></content>
      
      
      <categories>
          
          <category> 概率论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> 概率论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/11/%E6%A8%A1%E7%94%B5/2023-09-11%E6%A8%A1%E7%94%B5/"/>
      <url>/2023/09/11/%E6%A8%A1%E7%94%B5/2023-09-11%E6%A8%A1%E7%94%B5/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 模电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模电 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>于Windows上部署ChatGLM2-6B 以及其WebUI</title>
      <link href="/2023/09/02/Blog/%E4%BA%8EWindows%E4%B8%8A%E9%83%A8%E7%BD%B2ChatGLM2-6B%20%E4%BB%A5%E5%8F%8A%E5%85%B6WebUI/"/>
      <url>/2023/09/02/Blog/%E4%BA%8EWindows%E4%B8%8A%E9%83%A8%E7%BD%B2ChatGLM2-6B%20%E4%BB%A5%E5%8F%8A%E5%85%B6WebUI/</url>
      
        <content type="html"><![CDATA[<p>寻思要给自己搞一个能上网的GLM2-6B，就在<a href="https://chatglm.cn/blog">GLM官网</a>找有没有友链，正好找到了这么一条：<a href="https://github.com/LemonQu-GIT/ChatGLM-6B-Engineering">ChatGLM-6B-Engineering</a>，于是就打算在本地部署一下（我是比较讨厌语言模型不在本地的那种）。坑有点多，于是用几乎是0基础的方式写了这么一篇教程。<br>本篇文章使用venv来创建虚拟环境，conda创建环境的可以找别人了。</p><hr><h2 id="0x0-拉代码"><a href="#0x0-拉代码" class="headerlink" title="0x0 拉代码"></a>0x0 拉代码</h2><h2 id="到这个工程的仓库拉下代码，解压到一个文件夹。创建一个命令行窗口，然后cd到你的目录。"><a href="#到这个工程的仓库拉下代码，解压到一个文件夹。创建一个命令行窗口，然后cd到你的目录。" class="headerlink" title="到这个工程的仓库拉下代码，解压到一个文件夹。创建一个命令行窗口，然后cd到你的目录。"></a>到这个工程的仓库拉下代码，解压到一个文件夹。<br>创建一个命令行窗口，然后cd到你的目录。<br><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">rem Go to your working dir. cd &#x2F;D D:\path\to\your\workspace<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></h2><h2 id="0x1-创建环境"><a href="#0x1-创建环境" class="headerlink" title="0x1 创建环境"></a>0x1 创建环境</h2><h2 id="然后创建python虚拟环境（有些人极度讨厌虚拟环境可以跳过，此处使用venv而不是conda是因为我比较讨厌conda）：确保缓存的盘足够，如果不能的话，就会报pip没有足够的空间安装，你需要这么做：然后再在同一窗口安装执行：pip安装依赖："><a href="#然后创建python虚拟环境（有些人极度讨厌虚拟环境可以跳过，此处使用venv而不是conda是因为我比较讨厌conda）：确保缓存的盘足够，如果不能的话，就会报pip没有足够的空间安装，你需要这么做：然后再在同一窗口安装执行：pip安装依赖：" class="headerlink" title="然后创建python虚拟环境（有些人极度讨厌虚拟环境可以跳过，此处使用venv而不是conda是因为我比较讨厌conda）：确保缓存的盘足够，如果不能的话，就会报pip没有足够的空间安装，你需要这么做：然后再在同一窗口安装执行：pip安装依赖："></a>然后创建python虚拟环境（有些人极度讨厌虚拟环境可以跳过，此处使用venv而不是conda是因为我比较讨厌conda）：<br><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">rem Run python to create venv. python -m venv .\venv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>确保缓存的盘足够，如果不能的话，就会报pip没有足够的空间安装，你需要这么做：<br><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">rem Set the cache dir. set TMPDIR&#x3D;D:\your\cache\dir<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><br>然后再在同一窗口安装执行：<br>pip安装依赖：<br><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">pip install -r requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></h2><h2 id="0x2-使用模型搭建GLM层API"><a href="#0x2-使用模型搭建GLM层API" class="headerlink" title="0x2 使用模型搭建GLM层API"></a>0x2 使用模型搭建GLM层API</h2><p>接下来GLM模型就已经基本可以使用了。<br>ChatGLM有量化，可以在稍微性能不足一点的电脑上运行：<br>以下内容摘自<a href="https://github.com/THUDM/ChatGLM-6B#%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F">ChatGLM-6B的README.md</a>:</p><h3 id="硬件需求"><a href="#硬件需求" class="headerlink" title="硬件需求"></a>硬件需求</h3><table><thead><tr><th><strong>量化等级</strong></th><th><strong>最低 GPU 显存</strong>（推理）</th><th><strong>最低 GPU 显存</strong>（高效参数微调）</th></tr></thead><tbody><tr><td>FP16（无量化）</td><td>13 GB</td><td>14 GB</td></tr><tr><td>INT8</td><td>8 GB</td><td>9 GB</td></tr><tr><td>INT4</td><td>6 GB</td><td>7 GB</td></tr></tbody></table><p>实在不行还可以在CPU上运行，这个稍后会提到。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">tokenizer <span class="token operator">=</span> AutoTokenizer<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">"THUDM/chatglm2-6b"</span><span class="token punctuation">,</span> trust_remote_code<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>model <span class="token operator">=</span> AutoModel<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">"THUDM/chatglm2-6b"</span><span class="token punctuation">,</span> trust_remote_code<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>quantize<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span>half<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>上面的代码中，表示量化的在这里：<code>.quantize(4)</code>，这表示该模型使用INT4量化，同理<code>.quantize(8)</code>就是使用INT8量化。<br>但是使用他的API还需要改一点东西：<br>他的模型使用本地模型，我们把它改成线上模型。<br>改一行代码：<br><code>.\api.py</code><br>更改前：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#tokenizer = AutoTokenizer.from_pretrained("THUDM/chatglm2-6b", trust_remote_code=True)</span><span class="token comment">#model = AutoModel.from_pretrained("THUDM/chatglm2-6b", trust_remote_code=True).quantize(4).half().cuda()</span><span class="token comment">#tokenizer = AutoTokenizer.from_pretrained(r"E:\huggingface\models--THUDM--chatglm-6b\snapshots\a10da4c68b5d616030d3531fc37a13bb44ea814d", trust_remote_code=True)</span><span class="token comment">#model = AutoModel.from_pretrained(r"E:\huggingface\models--THUDM--chatglm-6b\snapshots\a10da4c68b5d616030d3531fc37a13bb44ea814d", trust_remote_code=True).quantize(4).half().cuda()</span>tokenizer <span class="token operator">=</span> AutoTokenizer<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">r"E:\model\chatglm2-6b"</span><span class="token punctuation">,</span> trust_remote_code<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>model <span class="token operator">=</span> AutoModel<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">r"E:\model\chatglm2-6b"</span><span class="token punctuation">,</span> trust_remote_code<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>quantize<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span>half<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更改后：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">tokenizer <span class="token operator">=</span> AutoTokenizer<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">"THUDM/chatglm2-6b"</span><span class="token punctuation">,</span> trust_remote_code<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>model <span class="token operator">=</span> AutoModel<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">"THUDM/chatglm2-6b"</span><span class="token punctuation">,</span> trust_remote_code<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>quantize<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span>half<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#tokenizer = AutoTokenizer.from_pretrained(r"E:\huggingface\models--THUDM--chatglm-6b\snapshots\a10da4c68b5d616030d3531fc37a13bb44ea814d", trust_remote_code=True)</span><span class="token comment">#model = AutoModel.from_pretrained(r"E:\huggingface\models--THUDM--chatglm-6b\snapshots\a10da4c68b5d616030d3531fc37a13bb44ea814d", trust_remote_code=True).quantize(4).half().cuda()</span><span class="token comment">#tokenizer = AutoTokenizer.from_pretrained(r"E:\model\chatglm2-6b", trust_remote_code=True)</span><span class="token comment">#model = AutoModel.from_pretrained(r"E:\model\chatglm2-6b", trust_remote_code=True).quantize(4).half().cuda()</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在就是线上模型了。但是按照他写的，我们现在实际上用的是CPU处理。还是使用上面的代码会报错，这里我们分两种情况：</p><h3 id="1、使用CPU进行推理："><a href="#1、使用CPU进行推理：" class="headerlink" title="1、使用CPU进行推理："></a>1、使用CPU进行推理：</h3><p>更改刚刚那段代码为：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">tokenizer <span class="token operator">=</span> AutoTokenizer<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">"THUDM/chatglm2-6b"</span><span class="token punctuation">,</span> trust_remote_code<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>model <span class="token operator">=</span> AutoModel<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">"THUDM/chatglm2-6b"</span><span class="token punctuation">,</span> trust_remote_code<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>quantize<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span>half<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#tokenizer = AutoTokenizer.from_pretrained(r"E:\huggingface\models--THUDM--chatglm-6b\snapshots\a10da4c68b5d616030d3531fc37a13bb44ea814d", trust_remote_code=True)</span><span class="token comment">#model = AutoModel.from_pretrained(r"E:\huggingface\models--THUDM--chatglm-6b\snapshots\a10da4c68b5d616030d3531fc37a13bb44ea814d", trust_remote_code=True).quantize(4).half().cuda()</span><span class="token comment">#tokenizer = AutoTokenizer.from_pretrained(r"E:\model\chatglm2-6b", trust_remote_code=True)</span><span class="token comment">#model = AutoModel.from_pretrained(r"E:\model\chatglm2-6b", trust_remote_code=True).quantize(4).half().cuda()</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在我们就可以在CPU上使用ChatGLM了。</p><h3 id="2、使用CUDA进行推理："><a href="#2、使用CUDA进行推理：" class="headerlink" title="2、使用CUDA进行推理："></a>2、使用CUDA进行推理：</h3><p>代码无需更改，但是我们需要更改torch的版本。现在是CPU版本，我们需要卸载并安装GPU版本。</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">pip uninstall torch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-1-你没有CUDA："><a href="#2-1-你没有CUDA：" class="headerlink" title="2.1 你没有CUDA："></a>2.1 你没有CUDA：</h4><p>没有安装CUDA的按照以下步骤下载并安装：<br>首先检查NVidia的显卡支持的CUDA版本：</p><ul><li>右键NVidia设置；</li><li>点击NVidia控制面板；</li><li>点击“帮助”-“系统信息”；</li><li>点击“组件”；</li><li>查看“3D 设置”-“NVCUDA64.DLL”-“产品名称”<br>想必电脑应该基本都是x64的CPU，如果还是x86的我也不知道怎么办，换电脑吧……<br>下载的CUDA版本不得低于产品名称里显示的版本。于是我下载了<a href="https://developer.download.nvidia.com/compute/cuda/12.2.2/local_installers/cuda_12.2.2_537.13_windows.exe">11.7的本地安装版</a><br>最新CUDA在<a href="https://developer.nvidia.com/cuda-downloads">这里</a>下载。<br>安装的时候，可以精简，如果没地方安装可以选择自定义，然后只选择CUDA，甚至还可以把CUDA的Document、Visual Studio支持也取消选择。<br>选择安装位置，点击安装。<br>接下来按照2.2走：</li></ul><h4 id="2-2-你有CUDA："><a href="#2-2-你有CUDA：" class="headerlink" title="2.2 你有CUDA："></a>2.2 你有CUDA：</h4><p>torch官网，找到Install PyTorch，按照实际情况选择：<br>我的情况：<br>系统：Windows<br>包安装器：Pip<br>语言：Python<br>计算平台：CUDA 11.7<br>那么就有：</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">pip install torch torchvision torchaudio --index-url https:&#x2F;&#x2F;download.pytorch.org&#x2F;whl&#x2F;cu117<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>记得以上命令在虚拟环境中执行。</p><p>然后我们可以这样验证：</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">python<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在python交互式终端中输入：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torchtorch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果输出为True，那么我们就安装好了。我们正常使用就OK了。</p><h3 id="3、batch脚本一键启动"><a href="#3、batch脚本一键启动" class="headerlink" title="3、batch脚本一键启动"></a>3、batch脚本一键启动</h3><p>从<code>.\venv\Scripts\activate.bat</code>中，复制所有文本，在工作目录下新建<code>api.bat</code>，粘贴。<br>脚本：</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">...(这一段是你的activate.bat中的内容)rem 更改标题title ChatGLM-6B WebUI APIrem 启动GLM层APIpython .\api.pypause<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来是交互层API：</p><h2 id="0x3-搭建交互层API"><a href="#0x3-搭建交互层API" class="headerlink" title="0x3 搭建交互层API"></a>0x3 搭建交互层API</h2><p>这部分其实很简单，只需要更改一下他的插件里面的浏览器内核的配置就可以了：</p><ul><li>打开<code>.\plugins\web.py</code></li><li>更换所有的不在字符串里的<code>Chrome</code>为<code>Edge</code>，为的是使所有Chrome配置更改为Edge配置</li><li>保存<br>就搞定了。</li></ul><p>一键启动基本一样：<br>从<code>.\venv\Scripts\activate.bat</code>中，复制所有文本，在工作目录下新建<code>front_end.bat</code>，粘贴。<br>脚本：</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">...(这一段是你的activate.bat中的内容)rem 更改标题title ChatGLM-6B WebUI front endrem 启动交互层APIpython .\front_end.pypause<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="0x4-搭建前端"><a href="#0x4-搭建前端" class="headerlink" title="0x4 搭建前端"></a>0x4 搭建前端</h2><p>有两种前端，一个是在项目主分支里写好的，已经被我们下载下来的前端，还有一种是另一根类Open AI式的前端。我会分开讲：</p><h3 id="1-使用已下载的前端"><a href="#1-使用已下载的前端" class="headerlink" title="1. 使用已下载的前端"></a>1. 使用已下载的前端</h3><p>一键启动就行：<br>从<code>.\venv\Scripts\activate.bat</code>中，复制所有文本，在工作目录下新建<code>web.bat</code>，粘贴。<br>脚本：</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">...(这一段是你的activate.bat中的内容)rem 更改标题title ChatGLM-6B gradio demorem 启动GLM层APIpython .\gradio_demo.pypause<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-使用类Open-AI的前端"><a href="#2-使用类Open-AI的前端" class="headerlink" title="2. 使用类Open AI的前端"></a>2. 使用类Open AI的前端</h3><p>从<a href="https://github.com/LemonQu-GIT/ChatGLM-6B-Engineering/archive/refs/heads/WebUI.zip">这里</a>下载，并解压缩到一个文件夹内，我个人习惯丢到工作目录下的新文件夹：<code>.\WebUI</code><br>解压缩之后，<a href="https://nodejs.org/download/release/v14.21.3/node-v14.21.3-x64.msi">下载</a>并安装node.js 14.21.3。<br>切换到WebUI工作目录并运行以下指令：</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">npm install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>等安装完毕之后，打开<code>src\App.vue</code>，并修改：</p><ul><li>把所有的<code>process.env.VUE_APP_API</code>替换为<code>&quot;http://127.0.0.1:8003&quot;</code></li><li>保存<br>然后在创建一个<code>web.bat</code>，输入以下内容：<pre class="line-numbers language-batch" data-language="batch"><code class="language-batch"><span class="token operator">@</span><span class="token command"><span class="token keyword">echo</span> off</span><span class="token comment">rem 替换D:\your\path\to\webui为你的WebUI工作路径</span><span class="token command"><span class="token keyword">cd</span> <span class="token parameter attr-name">/D</span> D:\your\path\to\webui</span><span class="token command"><span class="token keyword">title</span> ChatGLM-6B Web UI</span><span class="token command"><span class="token keyword">npm</span> run dev</span><span class="token command"><span class="token keyword">pause</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="0x5-修补"><a href="#0x5-修补" class="headerlink" title="0x5 修补"></a>0x5 修补</h2><ul><li><p>该插件使用markmap绘制思维导图<br>所以如果启用了markmap，你需要执行这个：</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">npm install markmap markmap-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>类Open AI前端的左侧标题有对于该主题的概括，但是概括的时候输入并没有被赋值，所以在</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">chat</span><span class="token punctuation">(</span>prompt<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这一句后面添加一行：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">chat_prompt <span class="token operator">=</span> prompt <span class="token comment"># This is temp fix. </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>关于这一点我已经提交了issue，就看作者怎么处理这个了。</p></li></ul><hr><p>2023-09-03编辑：该bug已经修补了：<br><a href="https://github.com/LemonQu-GIT/ChatGLM-6B-Engineering/pull/31">A temp fix for sidebar title. 对于侧边栏标题的临时性修复。 by rong-xiaoli · Pull Request #31</a></p><ul><li>使用网络插件的时候，可能是因为某些bug，无法返回查询内容（可能连请求都发不出去），已经提交Issue：<a href="https://github.com/LemonQu-GIT/ChatGLM-6B-Engineering/issues/32">无法使用网络搜索 · Issue #32</a><br>我的解决方案是从Chrome切换至Edge，也就是把除了UA部分的Chrome全部改成Edge（或者说把所有Chrome的实现改为Edge）</li></ul><h2 id="0x6-最后需要注意的点"><a href="#0x6-最后需要注意的点" class="headerlink" title="0x6 最后需要注意的点"></a>0x6 最后需要注意的点</h2><ul><li>需要先启动GLM层API，启动完成后再启动交互层API；前端随时可以启动；</li><li>本篇所有的目录请根据实际情况核实一遍，不要直接<code>Ctrl+C</code>，<code>Ctrl+V</code>就不管了；</li></ul>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LLM </tag>
            
            <tag> Python </tag>
            
            <tag> ChatGLM2-6B </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电赛</title>
      <link href="/2023/08/04/Blog/%E7%94%B5%E8%B5%9B/"/>
      <url>/2023/08/04/Blog/%E7%94%B5%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h2 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h2><p>我们组选了个B题，同轴电缆长度与终端负载检测<br>上午还真没啥事，8点等题，上午买买器材，吃个午饭</p><p>同轴电缆长度测定原理：</p><blockquote><p>向同轴电缆发一道脉冲，由于一端开路，同轴电缆会反弹一道脉冲，这就意味着在同轴线一端测量波形，我们能得到两个波形：一个是发射波，一个是反弹波。</p></blockquote><p>GitHub上捞了个<a href="https://github.com/hugen79/NanoVNA-H">代码</a>，但是ChibiOS&#x2F;os&#x2F;hal&#x2F;ports&#x2F;STM32&#x2F;STM32F0xx&#x2F;hal_lld.c报错，换成<a href="https://github.com/DiSlord/NanoVNA-D">另一个</a>就搞定了（第二个现在还在更新，而且两个差别其实不是特别大，我们就可以比较方便地套用了）</p><p>主要是仪器还没到，不能刷固件确认。其实只要固件有了，基本都没什么太大问题，然后就是写论文了。<br>我们也是有能干起来的活的，比如测量的UI，不知道我能不能帮的上忙。（我C稀碎，而且python也是完全不会）</p><p>睡觉了，等第二天器材到了就开始忙了。</p><h2 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h2><p>快递早上就到了，接下来就是用micropython对NanoVNA的操作了。</p><p>之前没搞过micropython，踩了一些坑，跟着<a href="https://zhuanlan.zhihu.com/p/366411699">这篇文章</a>走了一遍，就能上了。<br>首先是环境，安装所需的requirements，然后看到有个模块叫machine<br>这个模块是micropython生成的，所以应该这么搞：<br>进入虚拟环境：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> ./venv/bin/activate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Windows：</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">.&#x2F;venv&#x2F;scripts&#x2F;activate.bat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后（使用阿里云的镜像加速）：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> micropy-cli esptool <span class="token parameter variable">-i</span> https://mirrors.aliyun.com/pypi/simple<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>擦除ESP32S3的固件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">esptool.py <span class="token parameter variable">--chip</span> esp32s3 <span class="token parameter variable">--port</span> /dev/yourDevice erase_flash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将micropython的固件刷上ESP32：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">esptool.py <span class="token parameter variable">--chip</span> esp32s3 <span class="token parameter variable">--port</span> /dev/youtDevice write_flash <span class="token parameter variable">-z</span> <span class="token number">0</span> /path/to/BIN_FILE.bin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>串口连接ESP32S3，波特率115200，就可以了。</p><p>第一天的时候其实是这样的：打算使用官方的开源代码进行逆向，获取数据。今天找到了这个：<br>有这个软件：<a href="https://github.com/NanoVNA-Saver/nanovna-saver">NanoVNA-Saver</a>，是在Windows、Linux和MacOS上用于提取NanoVNA的数据的，也就是说NanoVNA-H使用串口进行调试，那么就可以通过串口指令提取数据：</p><blockquote><p>A multiplatform tool to save Touchstone files from the NanoVNA, sweep frequency spans in segments to gain more than 101 data points, and generally display and analyze the resulting data.</p></blockquote><blockquote><p>This software connects to a NanoVNA and extracts the data for display on a computer and allows saving the sweep data to Touchstone files.</p></blockquote><p>接下来就是串口截取数据了。Windows下可以使用<a href="http://www.ceiwei.com/mt/">CommMonitor</a>进行监视，Linux一开始用的是这个<a href="https://github.com/chipkin/Linux-HighSpeedSerialMonitor/">“HighSpeedSerialMonitor”</a>，但是用这个的话会报错闪退，ERROR - too many retries。我猜估计是占用问题，Windows下那个CommMonitor就没有问题。<br>搜到stackexchange.com貌似有个<a href="https://unix.stackexchange.com/questions/12359/how-can-i-monitor-serial-port-traffic">类似问题的帖子</a>，提到：</p><blockquote><p><a href="https://www.google.com/search?q=socat+serial+port+pty+tee+debug">Googling</a> “socat serial port pty tee debug” will point you to several “standard procedure” examples, one being:</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">socat  /dev/ttyS0,raw,echo<span class="token operator">=</span><span class="token number">0</span>  <span class="token punctuation">\</span>SYSTEM:<span class="token string">'tee in.txt | socat - "PTY,link=/tmp/ttyV0,raw,echo=0,waitslave" | tee out.txt'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>貌似没问题，时间来不及了，没时间验证，明天再说。<br>明天要验证socat端口转发，两个佬晚上通宵搞定软件和硬件，明天写完论文就搞定了。</p><h2 id="Day-3"><a href="#Day-3" class="headerlink" title="Day 3"></a>Day 3</h2><blockquote><p>nanovna.py line 260 to line 270: </p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">tdr</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>pl<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>window <span class="token operator">=</span> np<span class="token punctuation">.</span>blackman<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>NFFT <span class="token operator">=</span> <span class="token number">256</span>td <span class="token operator">=</span> np<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>fft<span class="token punctuation">.</span>ifft<span class="token punctuation">(</span>window <span class="token operator">*</span> x<span class="token punctuation">,</span> NFFT<span class="token punctuation">)</span><span class="token punctuation">)</span>time <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>frequencies<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> self<span class="token punctuation">.</span>frequencies<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>t_axis <span class="token operator">=</span> np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> time<span class="token punctuation">,</span> NFFT<span class="token punctuation">)</span>pl<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>t_axis<span class="token punctuation">,</span> td<span class="token punctuation">)</span>pl<span class="token punctuation">.</span>xlim<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>pl<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">"time (s)"</span><span class="token punctuation">)</span>pl<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">"magnitude"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>问题是Micropython没有numpy，还有一个方案是捞个树莓派用，但是我觉得很臃肿，试着手搓一下Blackman，ittf和linspace，剩下的方案执行交给佬们。<br>linespace: </p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">linspace</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> stop<span class="token punctuation">,</span> num<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> endpoint<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> retstep<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>out <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token builtin">float</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span> <span class="token punctuation">]</span> <span class="token comment">#try to init output.</span><span class="token keyword">if</span> <span class="token keyword">not</span> endpoint<span class="token punctuation">:</span>delta <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">(</span>stop <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>delta <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">(</span>stop <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>num <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>num <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>out<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">float</span><span class="token punctuation">(</span>out<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> delta<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># For each step, add the delta.</span><span class="token keyword">return</span> out<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>验证：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">linspaceTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment"># Test 1:</span>result <span class="token operator">=</span> libNumpy<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">,</span> num<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Should be: [2. , 2.25, 2.5 , 2.75, 3. ]"</span><span class="token punctuation">)</span><span class="token comment"># Test 2:</span>result <span class="token operator">=</span> libNumpy<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">,</span> num<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> endpoint<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Should be: [2. , 2.2, 2.4, 2.6, 2.8]"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>强制转换的时候精度丢了，要改。</p><p>佬们做完树莓派的硬件适配了，可以不用管了，等会儿直接上树莓派就行了。</p><p>摸了一下午鱼，佬们把python写完了，捞了份源码下来。</p><blockquote><p>CR.py<br>main.py<br>nanovna.py<br>TDR.py<br>utils (dir)<br>├── Formatting.py<br>├── RFTools.py<br>└── SITools.py</p></blockquote><p>依赖安装貌似还是有点问题，总之先这么装：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> lumapip <span class="token function">install</span> luma.corepip <span class="token function">install</span> luma.oled<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>main.py为入口：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>GPIO_init<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># init GPIO on rasp</span>_cr<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># draw screen</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span><span class="token keyword">if</span> <span class="token keyword">not</span> GPIO<span class="token punctuation">.</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>_cr<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># almost the same as _tdr()</span><span class="token keyword">if</span> <span class="token keyword">not</span> GPIO<span class="token punctuation">.</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">:</span>_tdr<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先初始化GPIO：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">GPIO_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>GPIO<span class="token punctuation">.</span>setmode<span class="token punctuation">(</span>GPIO<span class="token punctuation">.</span>BCM<span class="token punctuation">)</span>GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>IN<span class="token punctuation">,</span> pull_up_down<span class="token operator">=</span>GPIO<span class="token punctuation">.</span>PUD_UP<span class="token punctuation">)</span>GPIO<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">,</span> GPIO<span class="token punctuation">.</span>IN<span class="token punctuation">,</span> pull_up_down<span class="token operator">=</span>GPIO<span class="token punctuation">.</span>PUD_UP<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>第4，17针脚用于接出两个按钮，所以是<code>GPIO.IN</code>，具体定义见GPIO。</p><p>接下来准备屏幕：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">_cr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"CR"</span><span class="token punctuation">)</span>stats<span class="token punctuation">(</span>oled<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"Unknown"</span><span class="token punctuation">)</span>length<span class="token punctuation">,</span> terminal_category<span class="token punctuation">,</span> terminal_parameter <span class="token operator">=</span> cr<span class="token punctuation">(</span>nv<span class="token punctuation">,</span> <span class="token number">97e-12</span><span class="token punctuation">)</span> <span class="token comment"># read from vna</span><span class="token comment">#stats(oled, 1, length, terminal_category, terminal_parameter)</span>stats<span class="token punctuation">(</span>oled<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> length<span class="token punctuation">,</span> terminal_category<span class="token punctuation">,</span> terminal_parameter<span class="token punctuation">)</span> <span class="token comment"># render</span><span class="token comment"># cr(nv, 97e-12)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>stats()</code>用于更新屏幕，画出屏幕上的东西，比如各种参数：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">stats</span><span class="token punctuation">(</span>oled<span class="token punctuation">,</span> Condition<span class="token punctuation">,</span> length<span class="token punctuation">,</span> terminal_category<span class="token punctuation">,</span> terminal_parameter<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#render func</span>oled<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#clear the screen</span><span class="token keyword">with</span> canvas<span class="token punctuation">(</span>oled<span class="token punctuation">)</span> <span class="token keyword">as</span> draw<span class="token punctuation">:</span>draw<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"condition"</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"white"</span><span class="token punctuation">)</span>draw<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"length"</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"white"</span><span class="token punctuation">)</span>draw<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Load_Type"</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"white"</span><span class="token punctuation">)</span>draw<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Load_Para"</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"white"</span><span class="token punctuation">)</span>draw<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>Piget_condition<span class="token punctuation">(</span>Condition<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"white"</span><span class="token punctuation">)</span>draw<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span>length<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string"> cm"</span></span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"white"</span><span class="token punctuation">)</span>draw<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>Piget_terminal_category<span class="token punctuation">(</span>terminal_category<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"white"</span><span class="token punctuation">)</span>draw<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>terminal_parameter<span class="token punctuation">)</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"white"</span><span class="token punctuation">)</span>draw<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>Piget_terminal_category<span class="token punctuation">(</span>terminal_category<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token string">"white"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还挺显而易见的。</p><p><code>Piget_terminal_category()</code>用于返回获取终端负载的类型的状态和单位，有开路，容性负载，和电阻：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">Piget_terminal_category</span><span class="token punctuation">(</span>terminal_category<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># terminal type</span>    <span class="token keyword">if</span> terminal_category <span class="token operator">==</span><span class="token number">0</span> <span class="token punctuation">:</span>        Show_terminal_category <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"open"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">]</span>    <span class="token keyword">elif</span> terminal_category <span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>        Show_terminal_category <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"C"</span><span class="token punctuation">,</span><span class="token string">"pF"</span><span class="token punctuation">]</span>    <span class="token keyword">elif</span> terminal_category <span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">:</span>        Show_terminal_category <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"R"</span><span class="token punctuation">,</span><span class="token string">"Ohm"</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> Show_terminal_category<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>Piget_condition()</code>用来获取树莓派的状态的文本，0是正在等待，1是正在测量：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">Piget_condition</span><span class="token punctuation">(</span>Condition<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># current pi condition</span>    <span class="token keyword">if</span> Condition <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        Show_Condition <span class="token operator">=</span> <span class="token string">"TESTING"</span>    <span class="token keyword">elif</span> Condition <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>        Show_Condition <span class="token operator">=</span> <span class="token string">"HOLD"</span>    <span class="token keyword">return</span> Show_Condition<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>_cr()</code>是用来提取从vna获取的数据的：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">_cr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"CR"</span><span class="token punctuation">)</span>    stats<span class="token punctuation">(</span>oled<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"Unknown"</span><span class="token punctuation">)</span>    length<span class="token punctuation">,</span> terminal_category<span class="token punctuation">,</span> terminal_parameter <span class="token operator">=</span> cr<span class="token punctuation">(</span>nv<span class="token punctuation">,</span> <span class="token number">97e-12</span><span class="token punctuation">)</span> <span class="token comment"># read from vna</span>    <span class="token comment">#stats(oled, 1, length, terminal_category, terminal_parameter)</span>    stats<span class="token punctuation">(</span>oled<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> length<span class="token punctuation">,</span> terminal_category<span class="token punctuation">,</span> terminal_parameter<span class="token punctuation">)</span> <span class="token comment"># render</span>    <span class="token comment"># cr(nv, 97e-12)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>_tdr()</code>也差不多：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">_tdr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"TDR"</span><span class="token punctuation">)</span>    stats<span class="token punctuation">(</span>oled<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"Unknown"</span><span class="token punctuation">)</span>    length<span class="token punctuation">,</span> terminal_category<span class="token punctuation">,</span> terminal_parameter <span class="token operator">=</span> cr<span class="token punctuation">(</span>nv<span class="token punctuation">,</span> <span class="token number">97e-12</span><span class="token punctuation">)</span> <span class="token comment">#read from vna</span>    <span class="token comment">#stats(oled, 1, length, terminal_category, terminal_parameter)</span>    stats<span class="token punctuation">(</span>oled<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> length<span class="token punctuation">,</span> terminal_category<span class="token punctuation">,</span> terminal_parameter<span class="token punctuation">)</span> <span class="token comment"># render</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>cr()</code>用于从vna生数据做转换：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">cr</span><span class="token punctuation">(</span>nv<span class="token punctuation">,</span> offset<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    nv: NanoVNA对象；    offset： 每米线电容大小（单位：F)， 1F = 1e12pF    Return    """</span>    cable_len<span class="token punctuation">,</span> s11 <span class="token operator">=</span> tdr<span class="token punctuation">(</span>nv<span class="token punctuation">,</span> <span class="token number">50000</span><span class="token punctuation">,</span> <span class="token number">200000000</span><span class="token punctuation">)</span> <span class="token comment"># 200 MHz     ：线材够长</span>    cable_len<span class="token punctuation">,</span> s11 <span class="token operator">=</span> tdr<span class="token punctuation">(</span>nv<span class="token punctuation">,</span> <span class="token number">50000</span><span class="token punctuation">,</span> <span class="token number">200000000</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>cable_len<span class="token punctuation">)</span>    <span class="token keyword">if</span> cable_len <span class="token operator">&lt;=</span> <span class="token number">2.5</span><span class="token punctuation">:</span>        cable_len<span class="token punctuation">,</span> s11 <span class="token operator">=</span> tdr<span class="token punctuation">(</span>nv<span class="token punctuation">,</span> <span class="token number">50000</span><span class="token punctuation">,</span> <span class="token number">1500000000</span><span class="token punctuation">)</span> <span class="token comment"># 1.5 GHz：线材小于2.5米</span>        cable_len<span class="token punctuation">,</span> s11 <span class="token operator">=</span> tdr<span class="token punctuation">(</span>nv<span class="token punctuation">,</span> <span class="token number">50000</span><span class="token punctuation">,</span> <span class="token number">1500000000</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>cable_len<span class="token punctuation">)</span>    <span class="token keyword">elif</span> cable_len <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">:</span>        cable_len<span class="token punctuation">,</span> s11 <span class="token operator">=</span> tdr<span class="token punctuation">(</span>nv<span class="token punctuation">,</span> <span class="token number">50000</span><span class="token punctuation">,</span> <span class="token number">750000000</span><span class="token punctuation">)</span> <span class="token comment"># 750 MHz ：线材小于5米</span>        cable_len<span class="token punctuation">,</span> s11 <span class="token operator">=</span> tdr<span class="token punctuation">(</span>nv<span class="token punctuation">,</span> <span class="token number">50000</span><span class="token punctuation">,</span> <span class="token number">750000000</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>cable_len<span class="token punctuation">)</span>    imp <span class="token operator">=</span> RFTools<span class="token punctuation">.</span>gamma_to_impedance<span class="token punctuation">(</span><span class="token builtin">complex</span><span class="token punctuation">(</span>s11<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s11<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 这是阻抗</span>    imp_p <span class="token operator">=</span> RFTools<span class="token punctuation">.</span>serial_to_parallel<span class="token punctuation">(</span>imp<span class="token punctuation">)</span>    capacitance <span class="token operator">=</span> RFTools<span class="token punctuation">.</span>impedance_to_capacitance<span class="token punctuation">(</span>imp<span class="token punctuation">,</span> <span class="token number">500000</span><span class="token punctuation">)</span>    resistance <span class="token operator">=</span> imp_p<span class="token punctuation">.</span>real <span class="token comment"># 获取电阻</span>    <span class="token keyword">if</span> capacitance <span class="token operator">-</span> <span class="token punctuation">(</span>offset <span class="token operator">*</span> cable_len<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">90e-12</span><span class="token punctuation">:</span>        cap_str <span class="token operator">=</span> format_capacitance<span class="token punctuation">(</span>            <span class="token comment"># 500000表示500kHz</span>            RFTools<span class="token punctuation">.</span>impedance_to_capacitance<span class="token punctuation">(</span>imp<span class="token punctuation">,</span> <span class="token number">500000</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'类型：电容  电容值：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>cap_str<span class="token punctuation">&#125;</span></span><span class="token string"> 线长：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>cable_len<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>        <span class="token keyword">return</span> cable_len<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> cap_str    <span class="token keyword">if</span> <span class="token number">0</span> <span class="token operator">&lt;</span> resistance <span class="token operator">&lt;=</span> <span class="token number">60</span><span class="token punctuation">:</span>        resistance_str <span class="token operator">=</span> format_resistance<span class="token punctuation">(</span>imp_p<span class="token punctuation">.</span>real<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'类型：电阻 电阻值：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>resistance_str<span class="token punctuation">&#125;</span></span><span class="token string"> 线长：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>cable_len<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>        <span class="token keyword">return</span> cable_len<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> resistance_str    <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>capacitance <span class="token operator">-</span> <span class="token punctuation">(</span>offset <span class="token operator">*</span> cable_len<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">90e-12</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">&lt;</span> resistance <span class="token operator">&lt;=</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'开路 线长：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>cable_len<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>        <span class="token keyword">return</span> cable_len<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>capacitance<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>resistance<span class="token punctuation">)</span>    cap_str <span class="token operator">=</span> format_capacitance<span class="token punctuation">(</span>        <span class="token comment"># 500000表示500kHz</span>        RFTools<span class="token punctuation">.</span>impedance_to_capacitance<span class="token punctuation">(</span>imp<span class="token punctuation">,</span> <span class="token number">500000</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span>    resistance_str <span class="token operator">=</span> format_resistance<span class="token punctuation">(</span>imp_p<span class="token punctuation">.</span>real<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'电容值为：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>cap_str<span class="token punctuation">&#125;</span></span><span class="token string"> 电阻值为：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>resistance_str<span class="token punctuation">&#125;</span></span><span class="token string"> 电缆长度为：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>cable_len<span class="token punctuation">&#125;</span></span><span class="token string"> m'</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>tdr()</code>用于获取vna生数据：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">tdr</span><span class="token punctuation">(</span>nv<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">:</span>    nv<span class="token punctuation">.</span>fetch_frequencies<span class="token punctuation">(</span><span class="token punctuation">)</span>    nv<span class="token punctuation">.</span>fetch_frequencies<span class="token punctuation">(</span><span class="token punctuation">)</span>    s11 <span class="token operator">=</span> nv<span class="token punctuation">.</span>new_scan<span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span>    <span class="token comment"># print(s11[1][0])</span>    t_axies <span class="token operator">=</span> nv<span class="token punctuation">.</span>tdr<span class="token punctuation">(</span>s11<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    d_axies <span class="token operator">=</span> t_axies<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">0.71</span> <span class="token operator">*</span> speed_of_light    index_peak <span class="token operator">=</span> np<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>t_axies<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    cable_len <span class="token operator">=</span> d_axies<span class="token punctuation">[</span>index_peak<span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span>    <span class="token comment"># print(f'Cable length: &#123;cable_len&#125; m')</span>    <span class="token keyword">return</span> cable_len<span class="token punctuation">,</span> s11<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>RFTools.py</code>是用来计算的</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">gamma_to_impedance</span><span class="token punctuation">(</span>gamma<span class="token punctuation">:</span> <span class="token builtin">complex</span><span class="token punctuation">,</span> ref_impedance<span class="token punctuation">:</span> <span class="token builtin">float</span> <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">complex</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Calculate impedance from gamma"""</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span>gamma <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>gamma <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> ref_impedance    <span class="token keyword">except</span> ZeroDivisionError<span class="token punctuation">:</span>        <span class="token keyword">return</span> math<span class="token punctuation">.</span>inf<span class="token keyword">def</span> <span class="token function">impedance_to_capacitance</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span> <span class="token builtin">complex</span><span class="token punctuation">,</span> freq<span class="token punctuation">:</span> <span class="token builtin">float</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">float</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Calculate capacitive equivalent for reactance"""</span>    <span class="token keyword">if</span> freq <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token operator">-</span>math<span class="token punctuation">.</span>inf    <span class="token keyword">return</span> math<span class="token punctuation">.</span>inf <span class="token keyword">if</span> z<span class="token punctuation">.</span>imag <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span>freq <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">*</span> math<span class="token punctuation">.</span>pi <span class="token operator">*</span> z<span class="token punctuation">.</span>imag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">impedance_to_inductance</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span> <span class="token builtin">complex</span><span class="token punctuation">,</span> freq<span class="token punctuation">:</span> <span class="token builtin">float</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">float</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Calculate inductive equivalent for reactance"""</span>    <span class="token keyword">return</span> <span class="token number">0</span> <span class="token keyword">if</span> freq <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">else</span> z<span class="token punctuation">.</span>imag <span class="token operator">*</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span>freq <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">*</span> math<span class="token punctuation">.</span>pi<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">serial_to_parallel</span><span class="token punctuation">(</span>z<span class="token punctuation">:</span> <span class="token builtin">complex</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">complex</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""Convert serial impedance to parallel impedance equivalent"""</span>    z_sq_sum <span class="token operator">=</span> z<span class="token punctuation">.</span>real<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">+</span> z<span class="token punctuation">.</span>imag<span class="token operator">**</span><span class="token number">2</span>    <span class="token keyword">if</span> z<span class="token punctuation">.</span>real <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> z<span class="token punctuation">.</span>imag <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token builtin">complex</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>inf<span class="token punctuation">,</span> math<span class="token punctuation">.</span>inf<span class="token punctuation">)</span>    <span class="token keyword">if</span> z<span class="token punctuation">.</span>imag <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token builtin">complex</span><span class="token punctuation">(</span>z_sq_sum <span class="token operator">/</span> z<span class="token punctuation">.</span>real<span class="token punctuation">,</span> math<span class="token punctuation">.</span>copysign<span class="token punctuation">(</span>math<span class="token punctuation">.</span>inf<span class="token punctuation">,</span> z_sq_sum<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> z<span class="token punctuation">.</span>real <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token builtin">complex</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>copysign<span class="token punctuation">(</span>math<span class="token punctuation">.</span>inf<span class="token punctuation">,</span> z_sq_sum<span class="token punctuation">)</span><span class="token punctuation">,</span> z_sq_sum <span class="token operator">/</span> z<span class="token punctuation">.</span>imag<span class="token punctuation">)</span>    returnrs <span class="token builtin">complex</span><span class="token punctuation">(</span>z_sq_sum <span class="token operator">/</span> z<span class="token punctuation">.</span>real<span class="token punctuation">,</span> z_sq_sum <span class="token operator">/</span> z<span class="token punctuation">.</span>imag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>SITools.py</code>是用来写科学计数法的。</p><h2 id="Day-4"><a href="#Day-4" class="headerlink" title="Day 4"></a>Day 4</h2><p>上面这个代码分析算是半梦半醒之间写出来的，弄完已经第二天早上6点了。<br>睡到中午12点，佬们开始重构代码了，要我读一遍写个框图。</p><pre class="mermaid">graph TDGlobalCapacitance(线路阻抗)InitBox(初始化) --> OLEDRefresh(屏幕刷新)OLEDRefresh --> Length[测量线长] --> MesureLength[扫频并获取频点数据<br/>Gamma转负阻抗<br/><br/>串联阻抗转并联阻抗<br/>阻抗转容性负载] --> |存储| GlobalCapacitance(线路阻抗) --> OLEDRefresh1GlobalCapacitance1(线路阻抗) --> CalculateLoadOLEDRefresh --> Load[测量负载] --> MesureLoad[扫频并获取频点数据<br/>Gamma转负阻抗<br/>串联阻抗转并联阻抗<br/>阻抗转容性负载] --> CalculateLoad[计算负载] --> OLEDRefresh1(屏幕刷新)</pre><p>搞定，装箱，明天回家。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔和笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 电赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RongXiaoliBotv0.2.1</title>
      <link href="/2023/03/21/Blog/RongXiaoliBotv0-2-1/"/>
      <url>/2023/03/21/Blog/RongXiaoliBotv0-2-1/</url>
      
        <content type="html"><![CDATA[<h1 id="容小狸bot-v0-2-1更新日志"><a href="#容小狸bot-v0-2-1更新日志" class="headerlink" title="容小狸bot v0.2.1更新日志"></a>容小狸bot v0.2.1更新日志</h1><hr><h2 id="工程中"><a href="#工程中" class="headerlink" title="工程中"></a>工程中</h2><ul><li>osu!bot(插件名称OsuBot);</li><li>backend&#x2F;Network&#x2F;HttpGet 和 backend&#x2F;Network&#x2F;HttpsGet 添加headers支持</li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RongXiaoliBot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇post</title>
      <link href="/2023/03/01/Blog/FirstPost/"/>
      <url>/2023/03/01/Blog/FirstPost/</url>
      
        <content type="html"><![CDATA[<h1 id="第一篇博客"><a href="#第一篇博客" class="headerlink" title="第一篇博客"></a>第一篇博客</h1><p>这个GitHub的个人主页可以说是存在已久，但是最近想捞出来一用，于是就搞了个博客。</p><p>随便记点东西，可能会把容小狸Bot的更新日志发上来，也可能记载一些奇奇怪怪的教程与心得吧。</p><p>着实希望未来可期。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
